---
import type { Rankings } from "@/lib/api/types";
import CountryFlag from "./CountryFlag.astro";

export interface Props {
  rankings: Rankings;
}

const { rankings } = Astro.props;
---

<div class="space-y-4">
  <div class="flex justify-end mb-4">
    <div class="flex flex-col items-end gap-1">
      {rankings.week && rankings.year && (
        <p class="text-sm font-medium text-gray-700 dark:text-gray-300">
          Week {rankings.week}, {rankings.year}
        </p>
      )}
      <p class="text-xs text-gray-500 dark:text-gray-400">
        {new Date(rankings.lastUpdated).toLocaleDateString()}
      </p>
    </div>
  </div>

  <!-- Mobile Card View -->
  <div class="block sm:hidden space-y-3">
    {rankings.rankings.map((entry, index) => (
      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-600 p-4 shadow-sm">
        <div class="flex items-center justify-between mb-3">
          <div class="flex items-center gap-3">
            <span class="text-2xl font-bold text-yellow-600 dark:text-yellow-400 bg-yellow-50 dark:bg-yellow-900/30 px-2 py-1 rounded">
              #{entry.rank}
            </span>
            <CountryFlag
              countryCode={entry.player.countryCode}
              nationality={entry.player.nationality}
              size="medium"
            />
          </div>
          {entry.movement !== undefined && (
            <span class={`text-sm font-medium px-2 py-1 rounded ${
              entry.movement > 0
                ? 'text-green-700 bg-green-50 dark:text-green-400 dark:bg-green-900/30'
                : entry.movement < 0
                  ? 'text-red-700 bg-red-50 dark:text-red-400 dark:bg-red-900/30'
                  : 'text-gray-500 dark:text-gray-400'
            }`}>
              {entry.movement > 0 && "↑"}
              {entry.movement < 0 && "↓"}
              {entry.movement === 0 && "—"}
              {entry.movement !== 0 && Math.abs(entry.movement)}
            </span>
          )}
        </div>
        <div class="space-y-2">
          <div>
            <a
              href={`/player/${entry.player.id}`}
              class="font-semibold text-lg text-yellow-700 dark:text-yellow-300 hover:text-yellow-800 dark:hover:text-yellow-200 hover:underline"
            >
              {entry.player.name}
            </a>
            {entry.player.abbreviation && (
              <span class="ml-2 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-2 py-1 rounded">
                {entry.player.abbreviation}
              </span>
            )}
          </div>
          <div class="flex justify-between items-center text-sm">
            <span class="text-gray-600 dark:text-gray-400">{entry.player.nationality}</span>
            <div class="text-right">
              <div class="font-bold text-gray-900 dark:text-gray-100">{entry.points.toLocaleString()} pts</div>
              <div class="text-xs text-gray-500 dark:text-gray-400">{entry.competitionsPlayed || '—'} tournaments</div>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Desktop Table View -->
  <div class="hidden sm:block bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-600 overflow-hidden">
    <div class="overflow-x-auto">
      <table class="w-full">
        <thead>
          <tr class="bg-yellow-50 dark:bg-yellow-900/30 border-b border-yellow-200 dark:border-yellow-700/50">
            <th class="px-3 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-200 uppercase tracking-wider">Rank</th>
            <th class="px-3 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-200 uppercase tracking-wider">Player</th>
            <th class="px-3 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-200 uppercase tracking-wider">Country</th>
            <th class="px-3 py-3 text-right text-xs font-semibold text-gray-700 dark:text-gray-200 uppercase tracking-wider">Points</th>
            <th class="px-3 py-3 text-center text-xs font-semibold text-gray-700 dark:text-gray-200 uppercase tracking-wider">Movement</th>
            <th class="px-3 py-3 text-center text-xs font-semibold text-gray-700 dark:text-gray-200 uppercase tracking-wider">Tournaments</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-100 dark:divide-gray-700">
          {rankings.rankings.map((entry, index) => (
            <tr class={`group ${index % 2 === 0 ? 'bg-white dark:bg-gray-800' : 'bg-gray-50 dark:bg-gray-900/50'} hover:bg-yellow-50 dark:hover:bg-yellow-900/20 transition-colors duration-150`}>
              <td class="px-3 py-3">
                <span class={`inline-flex items-center justify-center w-8 h-8 rounded font-bold text-sm ${
                  entry.rank <= 10
                    ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/50 dark:text-yellow-200'
                    : 'text-gray-900 dark:text-gray-100'
                }`}>
                  {entry.rank}
                </span>
              </td>
              <td class="px-3 py-3">
                <div class="flex items-center gap-3">
                  <div class="min-w-0 flex-1">
                    <a
                      href={`/player/${entry.player.id}`}
                      class="font-semibold text-yellow-700 dark:text-yellow-300 hover:text-yellow-800 dark:hover:text-yellow-200 hover:underline transition-colors group-hover:underline"
                      title={`View ${entry.player.name}'s profile`}
                    >
                      {entry.player.name}
                    </a>
                    {entry.player.abbreviation && (
                      <div class="text-xs text-gray-500 dark:text-gray-400 font-medium mt-0.5">
                        {entry.player.abbreviation}
                      </div>
                    )}
                  </div>
                </div>
              </td>
              <td class="px-3 py-3">
                <div class="flex items-center gap-2">
                  <CountryFlag
                    countryCode={entry.player.countryCode}
                    nationality={entry.player.nationality}
                    size="small"
                  />
                  <span class="text-sm text-gray-600 dark:text-gray-300 hidden lg:block">{entry.player.nationality}</span>
                </div>
              </td>
              <td class="px-3 py-3 text-right">
                <span class="font-bold text-gray-900 dark:text-gray-100">
                  {entry.points.toLocaleString()}
                </span>
              </td>
              <td class="px-3 py-3 text-center">
                {entry.movement !== undefined && (
                  <span class={`inline-flex items-center justify-center w-12 h-6 rounded-full text-xs font-bold ${
                    entry.movement > 0
                      ? 'bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-200'
                      : entry.movement < 0
                        ? 'bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-200'
                        : 'text-gray-500 dark:text-gray-400'
                  }`}>
                    {entry.movement > 0 && "↑"}
                    {entry.movement < 0 && "↓"}
                    {entry.movement === 0 && "—"}
                    {entry.movement !== 0 && Math.abs(entry.movement)}
                  </span>
                )}
              </td>
              <td class="px-3 py-3 text-center">
                <span class="text-sm text-gray-600 dark:text-gray-300">
                  {entry.competitionsPlayed || '—'}
                </span>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
</div>


<style>
  table {
    font-variant-numeric: tabular-nums;
  }
</style>