---
import type { LiveMatches } from "@/lib/api/types";
import MatchCard from "./MatchCard.astro";

export interface Props {
  matches: LiveMatches;
  title: string;
}

const { matches, title } = Astro.props;

// Group matches by status for better organization
const groupedMatches = {
  live: matches.matches.filter(m => m.status === 'live'),
  scheduled: matches.matches.filter(m => m.status === 'scheduled'),
  completed: matches.matches.filter(m => m.status === 'completed')
};
---

<div class="space-y-8">
  <!-- Header -->
  <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 p-6 sm:p-8">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
      <div>
        <h2 class="text-2xl sm:text-3xl font-bold text-yellow-700 dark:text-yellow-400">{title}</h2>
        <p class="text-gray-600 dark:text-gray-400 mt-1">
          Live scores and schedules from ATP and WTA tournaments
        </p>
      </div>
      <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400">
        <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
        <span>Updated {new Date(matches.lastUpdated).toLocaleTimeString()}</span>
      </div>
    </div>
  </div>

  <!-- Match Stats -->
  <div class="grid grid-cols-2 sm:grid-cols-4 gap-4">
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 text-center">
      <div class="text-2xl font-bold text-red-600 dark:text-red-400">{groupedMatches.live.length}</div>
      <div class="text-sm text-gray-600 dark:text-gray-400">Live</div>
    </div>
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 text-center">
      <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">{groupedMatches.scheduled.length}</div>
      <div class="text-sm text-gray-600 dark:text-gray-400">Upcoming</div>
    </div>
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 text-center">
      <div class="text-2xl font-bold text-green-600 dark:text-green-400">{groupedMatches.completed.length}</div>
      <div class="text-sm text-gray-600 dark:text-gray-400">Completed</div>
    </div>
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 text-center">
      <div class="text-2xl font-bold text-yellow-600 dark:text-yellow-400">{matches.matches.length}</div>
      <div class="text-sm text-gray-600 dark:text-gray-400">Total</div>
    </div>
  </div>

  <!-- Live Matches -->
  {groupedMatches.live.length > 0 && (
    <section>
      <div class="flex items-center gap-3 mb-6">
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 bg-red-500 rounded-full animate-pulse shadow-lg"></div>
          <h3 class="text-2xl font-bold text-red-600 dark:text-red-400">ðŸ”´ Live Matches</h3>
        </div>
        <span class="bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300 px-3 py-1 rounded-full text-sm font-semibold">
          {groupedMatches.live.length}
        </span>
      </div>
      <div class="grid gap-6 sm:grid-cols-1 lg:grid-cols-2 2xl:grid-cols-3">
        {groupedMatches.live.map(match => (
          <MatchCard match={match} />
        ))}
      </div>
    </section>
  )}

  <!-- Upcoming Matches -->
  {groupedMatches.scheduled.length > 0 && (
    <section>
      <div class="flex items-center gap-3 mb-6">
        <h3 class="text-2xl font-bold text-blue-600 dark:text-blue-400">ðŸ•’ Upcoming Matches</h3>
        <span class="bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 px-3 py-1 rounded-full text-sm font-semibold">
          {groupedMatches.scheduled.length}
        </span>
      </div>
      <div class="grid gap-6 sm:grid-cols-1 lg:grid-cols-2 2xl:grid-cols-3">
        {groupedMatches.scheduled.map(match => (
          <MatchCard match={match} />
        ))}
      </div>
    </section>
  )}

  <!-- Completed Matches -->
  {groupedMatches.completed.length > 0 && (
    <section>
      <div class="flex items-center gap-3 mb-6">
        <h3 class="text-2xl font-bold text-green-600 dark:text-green-400">âœ… Completed Matches</h3>
        <span class="bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 px-3 py-1 rounded-full text-sm font-semibold">
          {groupedMatches.completed.length}
        </span>
      </div>
      <div class="grid gap-6 sm:grid-cols-1 lg:grid-cols-2 2xl:grid-cols-3">
        {groupedMatches.completed.map(match => (
          <MatchCard match={match} />
        ))}
      </div>
    </section>
  )}

  <!-- No Matches -->
  {matches.matches.length === 0 && (
    <div class="py-16 text-center bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700">
      <div class="mx-auto mb-6 h-20 w-20 rounded-full bg-gradient-to-br from-yellow-100 to-yellow-200 dark:from-yellow-900/20 dark:to-yellow-800/20 flex items-center justify-center">
        <span class="text-4xl">ðŸŽ¾</span>
      </div>
      <h3 class="mb-3 text-xl font-bold text-gray-900 dark:text-gray-100">No matches today</h3>
      <p class="text-gray-600 dark:text-gray-400 max-w-md mx-auto">
        There are no matches scheduled for today or currently live. Check back later for updates!
      </p>
      <div class="mt-6">
        <button
          onclick="window.location.reload()"
          class="inline-flex items-center gap-2 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
          Refresh
        </button>
      </div>
    </div>
  )}
</div>

<style>
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }
</style>