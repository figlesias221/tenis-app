---
import type { EnhancedCompetitionDisplay } from '@/lib/api/official-types';
import { CompetitionFormatter } from '@/lib/utils/competition-formatter';

interface Props {
  tournament: EnhancedCompetitionDisplay;
  showDetails?: boolean;
}

const { tournament, showDetails = true } = Astro.props;

const levelColor = CompetitionFormatter.getLevelColor(tournament.level.toLowerCase().replace(/\s+/g, '_'));
const surfaceIcon = CompetitionFormatter.getSurfaceIcon(tournament.surface || 'Hard');
const isEstimatedPrize = !tournament.prizeMoney || tournament.prizeMoney.currency === 'USD';
---

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 p-6">
  <!-- Header -->
  <div class="flex items-start justify-between mb-4">
    <div class="flex-1">
      <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-1">
        {tournament.name}
      </h2>
      <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
        <span class={`font-medium ${levelColor}`}>
          {tournament.level}
        </span>
        <span>‚Ä¢</span>
        <span>{tournament.category}</span>
        <span>‚Ä¢</span>
        <span>{tournament.gender}</span>
        <span>{tournament.type}</span>
      </div>
    </div>

    <!-- Status Badge -->
    {tournament.status && (
      <div class={`px-2 py-1 rounded-full text-xs font-medium ${
        tournament.status === 'active' ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' :
        tournament.status === 'delayed' ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200' :
        tournament.status === 'cancelled' ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200' :
        'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200'
      }`}>
        {tournament.status.charAt(0).toUpperCase() + tournament.status.slice(1)}
      </div>
    )}
  </div>

  {showDetails && (
    <!-- Tournament Details Grid -->
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
      <!-- Surface -->
      <div class="flex items-center gap-2">
        <span class="text-xl">{surfaceIcon}</span>
        <div>
          <div class="text-xs text-gray-500 dark:text-gray-400">Surface</div>
          <div class="font-medium text-gray-900 dark:text-gray-100">
            {tournament.surface || 'Hard'}
          </div>
        </div>
      </div>

      <!-- Prize Money -->
      {tournament.prizeMoney && (
        <div class="flex items-center gap-2">
          <span class="text-xl">üí∞</span>
          <div>
            <div class="text-xs text-gray-500 dark:text-gray-400">
              Prize {isEstimatedPrize ? '(Est.)' : ''}
            </div>
            <div class="font-medium text-gray-900 dark:text-gray-100">
              {CompetitionFormatter.formatPrizeMoney(tournament.prizeMoney, isEstimatedPrize)}
            </div>
          </div>
        </div>
      )}

      <!-- Tournament ID -->
      <div class="flex items-center gap-2">
        <span class="text-xl">üÜî</span>
        <div>
          <div class="text-xs text-gray-500 dark:text-gray-400">ID</div>
          <div class="font-mono text-xs text-gray-600 dark:text-gray-400">
            {tournament.id.replace('sr:competition:', '')}
          </div>
        </div>
      </div>

      <!-- Parent Tournament -->
      {tournament.parentTournament && (
        <div class="flex items-center gap-2">
          <span class="text-xl">üèÜ</span>
          <div>
            <div class="text-xs text-gray-500 dark:text-gray-400">Tournament</div>
            <div class="font-medium text-gray-900 dark:text-gray-100">
              {tournament.parentTournament.name}
            </div>
          </div>
        </div>
      )}
    </div>

    <!-- Venue Information -->
    {tournament.venue && (
      <div class="border-t border-gray-200 dark:border-gray-600 pt-4">
        <h3 class="font-semibold text-gray-900 dark:text-gray-100 mb-2 flex items-center gap-2">
          <span class="text-lg">üèüÔ∏è</span>
          Venue Information
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <span class="text-gray-500 dark:text-gray-400">Complex:</span>
            <span class="ml-2 font-medium text-gray-900 dark:text-gray-100">
              {tournament.venue.complex}
            </span>
          </div>
          {tournament.venue.maxCapacity && (
            <div>
              <span class="text-gray-500 dark:text-gray-400">Capacity:</span>
              <span class="ml-2 font-medium text-gray-900 dark:text-gray-100">
                {tournament.venue.maxCapacity.toLocaleString()}
                {tournament.venue.reducedCapacity && (
                  <span class="text-yellow-600 dark:text-yellow-400 ml-1">(Reduced)</span>
                )}
              </span>
            </div>
          )}
        </div>
      </div>
    )}

    <!-- Data Source -->
    <div class="border-t border-gray-200 dark:border-gray-600 pt-3 mt-4">
      <p class="text-xs text-gray-500 dark:text-gray-400">
        Competition data provided by SportRadar API
        {isEstimatedPrize && tournament.prizeMoney && (
          <span class="ml-1">‚Ä¢ Prize money estimated based on tournament level</span>
        )}
      </p>
    </div>
  )}
</div>