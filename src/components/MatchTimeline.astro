---
// import PlayerImage from "./PlayerImage.astro";

export interface Props {
  playerId: string;
  playerName: string;
  limit?: number;
}

const { limit = 3 } = Astro.props;

// Note: In a real application, this would fetch actual match data from the API
// For now, we'll show a message that match data isn't available
const matches: any[] = [];
---

<div class="bg-white dark:bg-surface-900 rounded-lg border border-surface-200 dark:border-surface-700 p-4">
  <h3 class="font-semibold text-surface-900 dark:text-surface-100 mb-4">Recent Matches</h3>

  {matches.length > 0 ? (
    <div class="space-y-3">
      {matches.map((match) => (
        <div class="flex items-center gap-3 p-3 bg-surface-50 dark:bg-surface-800 rounded-lg">
          <div class="text-sm text-surface-600 dark:text-surface-400">
            Match data would appear here
          </div>
        </div>
      ))}
    </div>
  ) : (
    <div class="text-center py-8">
      <div class="text-3xl mb-2">ðŸŽ¾</div>
      <p class="text-surface-600 dark:text-surface-400 text-sm mb-2">
        Recent match data not available
      </p>
      <p class="text-surface-500 dark:text-surface-400 text-xs">
        Match history would be displayed here with real API data
      </p>
    </div>
  )}
</div>