---
// Premium theme toggle component with enhanced animations
import Icons from "./Icons.astro";
---

<button
  id="theme-toggle"
  type="button"
  class="relative inline-flex items-center justify-center w-10 h-10 rounded-xl bg-gradient-to-br from-surface-100 to-surface-200 dark:from-surface-700 dark:to-surface-800 hover:from-surface-200 hover:to-surface-300 dark:hover:from-surface-600 dark:hover:to-surface-700 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-tennis-400 dark:focus:ring-tennis-500 backdrop-blur-sm border border-surface-200/50 dark:border-surface-600/50 hover:border-surface-300/70 dark:hover:border-surface-500/70 hover:scale-105 active:scale-95 group overflow-hidden"
  aria-label="Toggle theme"
  title="Toggle between light and dark mode"
>
  <!-- Premium animated background effect -->
  <div class="absolute inset-0 bg-gradient-to-r from-tennis-400/20 to-electric-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl"></div>

  <!-- Sun icon (visible in dark mode) -->
  <div id="theme-toggle-light-icon" class="hidden dark:block transition-all duration-500 transform dark:rotate-0 dark:scale-100 rotate-180 scale-75">
    <Icons name="sun" class="w-5 h-5 text-amber-500 group-hover:text-amber-400 transition-colors duration-300 drop-shadow-sm" />
  </div>

  <!-- Moon icon (visible in light mode) -->
  <div id="theme-toggle-dark-icon" class="block dark:hidden transition-all duration-500 transform scale-100 rotate-0 dark:rotate-180 dark:scale-75">
    <Icons name="moon" class="w-5 h-5 text-slate-600 group-hover:text-slate-700 transition-colors duration-300 drop-shadow-sm" />
  </div>
</button>

<script>
  // Simple and reliable theme toggle
  function setupThemeToggle() {
    const button = document.getElementById('theme-toggle');
    if (!button) {
      console.warn('Theme toggle button not found');
      return;
    }

    // Remove any existing listeners to prevent duplicates
    const newButton = button.cloneNode(true) as HTMLElement;
    button.parentNode?.replaceChild(newButton, button);

    // Add click handler with enhanced animations
    newButton.addEventListener('click', function() {
      const html = document.documentElement;
      const isDark = html.classList.contains('dark');

      console.log('Theme toggle clicked, current mode:', isDark ? 'dark' : 'light');

      // Add premium click animation
      newButton.style.transform = 'scale(0.95)';
      newButton.style.transition = 'transform 0.1s ease-out';

      // Add ripple effect
      const ripple = document.createElement('div');
      ripple.className = 'absolute inset-0 bg-white/30 rounded-xl animate-ping';
      newButton.appendChild(ripple);

      setTimeout(() => {
        ripple.remove();
      }, 600);

      setTimeout(() => {
        if (isDark) {
          html.classList.remove('dark');
          localStorage.setItem('theme', 'light');
          console.log('Switched to light mode');
        } else {
          html.classList.add('dark');
          localStorage.setItem('theme', 'dark');
          console.log('Switched to dark mode');
        }

        // Reset button transform with bounce
        newButton.style.transform = 'scale(1.05)';
        setTimeout(() => {
          newButton.style.transform = 'scale(1)';
          newButton.style.transition = 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)';
        }, 100);
      }, 50);
    });

    console.log('Theme toggle setup complete');
  }

  // Global functions for manual control
  (window as any).setLightMode = function() {
    document.documentElement.classList.remove('dark');
    localStorage.setItem('theme', 'light');
    console.log('Light mode activated');
  };

  (window as any).setDarkMode = function() {
    document.documentElement.classList.add('dark');
    localStorage.setItem('theme', 'dark');
    console.log('Dark mode activated');
  };

  // Setup immediately if DOM is ready, otherwise wait
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupThemeToggle);
  } else {
    setupThemeToggle();
  }

  // Also setup on Astro page loads
  document.addEventListener('astro:page-load', setupThemeToggle);
</script>
